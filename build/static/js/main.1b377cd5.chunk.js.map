{"version":3,"sources":["services/people.js","components/Filter.js","components/PersonForm.js","components/SuccessNotification.js","components/ErrorNotification.js","components/People.js","App.js","index.js"],"names":["baseUrl","people","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","destroy","delete","Filter","filter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","SuccessNotification","message","className","ErrorNotification","Person","person","destroyPerson","name","number","onClick","People","map","App","useState","setPeople","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","peopleService","initialPeople","peopleToShow","toLowerCase","includes","event","target","preventDefault","personObject","clearForm","some","p","existingPerson","window","confirm","returnedPerson","setTimeout","catch","error","concat","result","personIter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b377cd5.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/people'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst destroy = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst people = { getAll, create, update, destroy }\nexport default people\n","import React from 'react'\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with\n      <input\n        value={filter}\n        onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst SuccessNotification = ({ message }) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nexport default SuccessNotification\n","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\n\nexport default ErrorNotification\n","import React from 'react'\n\nconst Person = ({ person, destroyPerson }) => {\n  return (\n    <li className='person'>\n      {person.name}:  {person.number}\n      <button onClick={destroyPerson}>delete</button>\n    </li>\n  )\n}\n\nconst People = ({ people, destroyPerson }) => {\n\n  return(\n    <div>\n      <h2>Contacts</h2>\n      <ul>\n        {people.map((person) =>\n          <Person key={person.name} person={person} destroyPerson={destroyPerson(person)} />\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default People\n","import React, { useEffect, useState } from 'react'\nimport peopleService from './services/people'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport SuccessNotification from './components/SuccessNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport People from './components/People'\n\nconst App = () => {\n  const [ people, setPeople ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(initialPeople => {\n        setPeople(initialPeople)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const clearForm = () => {\n      setNewName('')\n      setNewNumber('')\n    }\n\n    if(people.some((p) => p.name === personObject.name)) {\n      let existingPerson = people.filter((p) => p.name === personObject.name)[0]\n      if(window.confirm(`${personObject.name} has already been added to the phonebook, replace the old number with this new one?`)) {\n        peopleService\n          .update(existingPerson.id, { ...existingPerson, ...personObject })\n          .then(returnedPerson => {\n            setPeople(people.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n            setSuccessMessage(`${existingPerson.name}'s number has been updated.`)\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n            clearForm()\n          })\n          .catch(error => {\n            setErrorMessage(`'${existingPerson.name}' was already deleted!`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPeople(people.filter(person => person.id !== existingPerson.id))\n            clearForm()\n          })\n      } else {\n        clearForm()\n      }\n    } else {\n      peopleService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPeople(people.concat(returnedPerson))\n          setSuccessMessage(`${returnedPerson.name} created!`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n          clearForm()\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const destroyPerson = (person) => () => {\n    if(window.confirm(`Delete ${person.name}?`)) {\n      peopleService\n        .destroy(person.id)\n        .then(result => {\n          setPeople(people.filter((personIter) => personIter.id !== person.id))\n          setSuccessMessage(`${person.name} deleted!`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const peopleToShow = people.filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange}/>\n      <h2>Add Contact</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <People people={peopleToShow} destroyPerson={destroyPerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}